<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="container mb-3">

      <nav aria-label="breadcrumb">
        <ol class="breadcrumb p-1 pl-2 pr-2">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item"><a href="/posts">Board</a></li>
          <li class="breadcrumb-item active" aria-current="page"><%= post.title %></li>
        </ol>
      </nav>

      <div class="card">
        <h5 class="card-header p-2"><%= post.title %></h5>
        <div class="row">
<!--
bootstrap의 row, col-? class를 사용해서 html element 안의 공간을
분할할 수 있습니다. row class element안에 col-? class element를 넣은 구조인데요,
?에는 기본적으로 1에서 12사이의 숫자가 들어갈 수 있습니다.
예를들어 row class element안에 col-6 class element를 2개 넣어 주면
row class element안의 공간이 6:6 즉 반반으로 나누어집니다.
col-sm-?, col-md-?와 같이 사이즈를 지정해주면,
화면이 작을 때(sm), 보통일 때(md), 클 때(lg), 아주 클 때(xl)로 나누어서
적용시킬 수 있습니다.
자세한 설명은 https://getbootstrap.com/docs/4.4/layout/grid 에서 읽어주세요.
-->
          <div class="col-md-7 col-lg-8 col-xl-9 order-sm-2 order-md-1">
            <div class="post-body p-2"><%= post.body %></div>
          </div>

          <div class="col-md-5 col-lg-4 col-xl-3 order-sm-1 order-md-2">
            <div class="post-info card m-2 p-2">
              <div class="border-bottom pb-1 mb-1">
                <span>Author</span> : <%= post.author ? post.author.username : "" %>
              </div>
              <!-- index와 마찬가지로 show에도 author 항목을 추가하고
              author가 있는 경우 author의 username을 표시합니다. -->
              <div><span>Created</span> : <span data-date-time="<%= post.createdAt %>"></span></div>
              <% if(post.updatedAt) { %>
                <div><span>Updated</span> : <span data-date-time="<%= post.updatedAt %>"></span></div>
              <% } %>
              <!--
data-date-time이 Created, Updated 옆의 <span> element에 사용되었습니다.
게시물이 작성된 시간, 수정된 시간이 년-월-일 시:분:초의 형태로 출력됩니다.
            -->
            </div>
          </div>

        </div>
      </div>

      <div class="mt-3">
        <a class="btn btn-primary" href="/posts<%= getPostQueryString() %>">Back</a>
        <% if(isAuthenticated && post.author && currentUser.id == post.author.id){ %>
          <a class="btn btn-primary" href="/posts/<%= post._id %>/edit<%= getPostQueryString() %>">Edit</a>
          <form action="/posts/<%= post._id %>?_method=delete<%= getPostQueryString(true) %>" method="post" class="d-inline">
            <a class="btn btn-primary" href="javascript:void(0)" onclick="confirm('Do you want to delete this?')?this.parentElement.submit():null;">Delete</a>
          </form>
        <% } %>
        <!--
show view에서는 뒤로가기버튼, 수정 버튼, 삭제버튼의 form에getPostQueryString
함수가 사용되었습니다. 삭제버튼의 form에는 이미 ?_method=delete query가 달려
있으므로 isAppended파라메터가 true가 되어야 합니다.
        -->
      </div>
      <!--
로그인이 된 상태이고, 게시물의 작성자 id(post.author.id)와
현재 로그인된 사용자의 id(currentUser.id)가 일치하는 경우에만
edit, delete 버튼을 보여줍니다. currentUser 역시 req.locals에
들어있어서 ejs에서 바로 사용할 수 있습니다.
      -->

      <div>
        <% if(isAuthenticated && currentUser.id == user.id){ %> <!-- 1 -->
          <a class="btn btn-primary" href="/users/<%= user.username %>/edit">Edit</a>
        <% } %>
      </div>
      <!--
로그인이 된 상태이고, 해당 user id(user.id)와 현재 로그인된
사용자의 id(currentUser.id)가 일치하는 경우에만 edit 버튼을
보여줍니다.
      -->

    </div>
  </body>
</html>
